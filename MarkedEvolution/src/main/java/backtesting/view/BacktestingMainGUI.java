package backtesting.view;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;

import backtesting.BackTest;

/**
 *
 * @author fabrizioortega
 */
public class BacktestingMainGUI extends javax.swing.JFrame {
	DefaultTableModel indTableModel;
	JLabel backtestImg;
	BacktestRenderer backtestRenderer;
    /**
     * Creates new form MainGUI
     */
    public BacktestingMainGUI() {
    	indTableModel = new DefaultTableModel();
        BackTest t = new BackTest("EURUSD=X");
        backtestRenderer = new BacktestRenderer(t.getData());
        backtestImg = new JLabel(new ImageIcon(backtestRenderer.init(0)));
        initComponents();
        jScrollPaneBacktestingVisualization.setViewportView(backtestImg);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPaneBacktestingVisualization = new javax.swing.JScrollPane();
        jScrollPaneTable = new javax.swing.JScrollPane();
        jIndividualTable = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jpEvoConfig = new javax.swing.JPanel();
        jbRun = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jbStop = new javax.swing.JButton();
        jpIndAnalysis = new javax.swing.JPanel();
        jbLoad = new javax.swing.JButton();
        jtfLoadFile = new javax.swing.JTextField();
        jbChoose = new javax.swing.JButton();
        jbLeft = new javax.swing.JButton();
        jbRight = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1400, 701));
        setMinimumSize(new java.awt.Dimension(1400, 701));
        setResizable(false);

        jPanel1.setMaximumSize(new java.awt.Dimension(1400, 701));
        jPanel1.setSize(new java.awt.Dimension(1400, 701));

        jScrollPaneBacktestingVisualization.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jScrollPaneBacktestingVisualization.setMaximumSize(new java.awt.Dimension(762, 446));
        jScrollPaneBacktestingVisualization.setMinimumSize(new java.awt.Dimension(762, 446));
        jScrollPaneBacktestingVisualization.setPreferredSize(new java.awt.Dimension(762, 446));
        jScrollPaneBacktestingVisualization.setSize(new java.awt.Dimension(762, 446));

        jScrollPaneTable.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));

        jIndividualTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPaneTable.setViewportView(jIndividualTable);

        jpEvoConfig.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));

        jbRun.setText("Run");

        jbStop.setText("Stop");

        javax.swing.GroupLayout jpEvoConfigLayout = new javax.swing.GroupLayout(jpEvoConfig);
        jpEvoConfig.setLayout(jpEvoConfigLayout);
        jpEvoConfigLayout.setHorizontalGroup(
            jpEvoConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEvoConfigLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbRun, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbStop, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );
        jpEvoConfigLayout.setVerticalGroup(
            jpEvoConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpEvoConfigLayout.createSequentialGroup()
                .addContainerGap(386, Short.MAX_VALUE)
                .addGroup(jpEvoConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jbStop, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(jbRun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Evolution config", jpEvoConfig);

        jpIndAnalysis.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));

        jbLoad.setText("Load");

        jtfLoadFile.setText("resources/loads/test.json");

        jbChoose.setText("Choose");

        javax.swing.GroupLayout jpIndAnalysisLayout = new javax.swing.GroupLayout(jpIndAnalysis);
        jpIndAnalysis.setLayout(jpIndAnalysisLayout);
        jpIndAnalysisLayout.setHorizontalGroup(
            jpIndAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpIndAnalysisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpIndAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbLoad)
                    .addGroup(jpIndAnalysisLayout.createSequentialGroup()
                        .addComponent(jtfLoadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbChoose)))
                .addContainerGap(226, Short.MAX_VALUE))
        );
        jpIndAnalysisLayout.setVerticalGroup(
            jpIndAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpIndAnalysisLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jpIndAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfLoadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbChoose))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 344, Short.MAX_VALUE)
                .addComponent(jbLoad)
                .addGap(16, 16, 16))
        );

        jTabbedPane1.addTab("Individual analysis", jpIndAnalysis);

        jbLeft.setText("jButton1");
        jbLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLeftActionPerformed(evt);
            }
        });

        jbRight.setText("jButton2");
        jbRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRightActionPerformed(evt);
            }
        });

        jSlider1.setValue(0);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPaneTable)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbLeft)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRight)
                        .addGap(40, 40, 40)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPaneBacktestingVisualization, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPaneBacktestingVisualization, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jbLeft)
                                .addComponent(jbRight))
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPaneTable, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>                        

    private void jbLeftActionPerformed(java.awt.event.ActionEvent evt) {                                       
    	backtestRenderer.left(1);
    	this.jScrollPaneBacktestingVisualization.repaint();
    }                                      

    private void jbRightActionPerformed(java.awt.event.ActionEvent evt) {                                        
    	backtestRenderer.right(1);
    	this.jScrollPaneBacktestingVisualization.repaint();
    }     
    
    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {                                      
    	backtestRenderer.init(this.jSlider1.getValue());
    	this.jScrollPaneBacktestingVisualization.repaint();
    }   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BacktestingMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BacktestingMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BacktestingMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BacktestingMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BacktestingMainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTable jIndividualTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPaneBacktestingVisualization;
    private javax.swing.JScrollPane jScrollPaneTable;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbChoose;
    private javax.swing.JButton jbLeft;
    private javax.swing.JButton jbLoad;
    private javax.swing.JButton jbRight;
    private javax.swing.JButton jbRun;
    private javax.swing.JButton jbStop;
    private javax.swing.JPanel jpEvoConfig;
    private javax.swing.JPanel jpIndAnalysis;
    private javax.swing.JTextField jtfLoadFile;
    // End of variables declaration                   
}
